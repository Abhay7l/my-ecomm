import { useState } from "react";
import FormInput from "../form-input/form-input.component";
// import { useState,useContext } from "react";

import "./sign-in-from.styles.scss"
import Button , {BUTTON_TYPE_CLASSES} from "../button/button.component";

// import { UserContext } from "../../contexts/user.context";

import {signInWithGooglePopup,
  // createUserDocumentFromAuth,
  signInAuthUserWithEmailAndPassword } from "../../utils/firebase/firebase.utils";



const defaultFormFields={
  email:'',
  password:'',
}
const SignInForm = () => {
  const [formFields,setFormFields] = useState(defaultFormFields);
  const {email,password}=formFields;
  
  // const {setCurrentUser}=useContext(UserContext);
  
  console.log(formFields);
  const resetFormFields=()=>{
    setFormFields(defaultFormFields);
  }
    const SignInWtihGoogle = async ()=>{
        //response will get access to object being generated by signin
        // const {user} = await signInWithGooglePopup();
        await signInWithGooglePopup();
        // we have destrucutured the object from response as response.user now we are getting response.user
        // setCurrentUser(user);
      //  await createUserDocumentFromAuth(user);
    };
const handleSubmit = async (event) =>{//on submiting we have to check if password and confirm password are same also we have to see if we have authenticated the user with email and password and then we have to create user document from what the function returns;
  event.preventDefault();//by this we specifies that all the changes happening in the form we are going to handle it there should be no default changes;
  
  try{
   await signInAuthUserWithEmailAndPassword(email,password);
    // console.log(response);
    // setCurrentUser(user);
    resetFormFields();
  }catch(error){
    switch(error.code){
      case 'auth/wrong-password':
        alert("incorrect password");
        break;
        case 'auth/user-not-found':
          alert('no user associated with this email')
          break;
          default:
            console.log(error);
    }
    // if(error.code==="auth/wrong-password"){
    // }
    // console.log(error);
  }
};
  const handleChange=(event)=>{
     const {name,value} = event.target;
     setFormFields({ ...formFields,[name]:value});
  };
   return(
    <div className="sign-in-container">
     <h2>Already have an account</h2>
     <span>Sign in with your email and password</span>
     <form onSubmit={handleSubmit}>   
    {/* onSubmit callback; */}
      <FormInput 
      label="Email" 
      type ="email"
       required 
       onChange={handleChange}
        name="email" 
        value={email}
        />
      <FormInput 
      label="Password" 
      type="password"
       required 
       onChange={handleChange}
        name="password" 
        value={password}
        />
        <div className="buttons-container">
      <Button  type = "submit">SIGN IN</Button>
      <Button type ='button'buttonType={BUTTON_TYPE_CLASSES.google} onClick={SignInWtihGoogle}>GOOGLE SIGNIN</Button>
        </div>
      {/* when the button is clicked it tells to run the onSubmit callback and the onSubmit callback runs only if all the required validations are filled;*/}
    </form>
    </div>
   );
};
export default SignInForm;